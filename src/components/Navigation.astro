---
import { Icon } from 'astro-icon/components';

const links = [
  { text: 'Blog', path: '/blog' },
  { text: 'Tags', path: '/tags' },
  { text: 'About me', path: '/about' },
];

const currentPath = new URL(Astro.request.url).pathname;
---

<div class="menu-mobile">
  <button class="icon-btn menu-open-btn">
    <Icon name="lucide:menu" size={30} />
  </button>

  <dialog class="menu-dialog">
    <div class="menu-dialog-content">
      <button class="icon-btn menu-close-btn">
        <Icon name="lucide:x" size={30} />
      </button>
      <menu class="nav-links">
        {
          links.map((link) => (
            <li>
              <a class="nav-link" href={link.path}>
                {link.text}
              </a>
            </li>
          ))
        }
      </menu>
    </div>
  </dialog>
</div>

<div class="menu-desktop">
  <menu class="nav-links">
    {
      links.map((link) => (
        <li>
          <a
            class={
              currentPath.includes(link.path)
                ? 'nav-link nav-link-current'
                : 'nav-link'
            }
            href={link.path}
          >
            {link.text}
          </a>
        </li>
      ))
    }
  </menu>
</div>

<!-- CSS -->

<style>
  .menu-mobile {
    --clr-accent: var(--clr-blue-500);
    display: block;

    @media screen and (min-width: 768px) {
      display: none;
    }
  }

  .menu-desktop {
    display: none;

    @media screen and (min-width: 768px) {
      display: block;
    }
  }

  .menu-dialog {
    width: 100%;
    max-width: 340px;
    height: 100%;
    max-height: 100%;
    margin-inline: auto 0;
    margin-block: 0;
    padding: 0;
    border: 0;
    animation: slide-in 300ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
    will-change: transform;

    &[data-closing] {
      animation: slide-out 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
    }
  }

  .menu-dialog::backdrop {
    animation: fade-in 200ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
  }

  .menu-dialog[data-closing]::backdrop {
    animation: fade-out 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
  }

  .menu-dialog-content {
    display: flex;
    align-items: flex-start;
    gap: 15px;
    width: 100%;
    height: 100%;
    padding: 30px;
    background-color: black;
    color: white;
  }

  .menu-close-btn {
    order: 1;
  }

  .nav-links {
    display: flex;
    flex-direction: column;
    gap: 20px;
    width: 100%;
    margin: 0;
    padding: 0;
    list-style: none;

    @media screen and (min-width: 768px) {
      flex-direction: row;
    }
  }

  .nav-link {
    display: block;
    margin-top: 0.1em;
    color: var(--clr-gray-900);
    font-size: 1.2rem;
    font-weight: 600;
    text-decoration: none;
    text-transform: uppercase;
    transition: color 250ms;

    &:hover,
    &:focus {
      color: var(--clr-accent);
    }

    @media screen and (min-width: 768px) {
      &::after {
        content: '';
        display: block;
        width: 100%;
        height: 2px;
        background-color: currentColor;
        border-radius: 100vw;
        opacity: 0;
        transform: scale(0.98) translateY(-4px);
        transition:
          opacity 250ms,
          transform 250ms;
      }

      &:hover::after,
      &:focus::after {
        opacity: 1;
        transform: translateY(0px);
      }
    }
  }

  .nav-link-current {
    color: var(--clr-accent);

    &::after {
      content: '';
      display: block;
      width: 100%;
      height: 2px;
      background-color: currentColor;
      border-radius: 100vw;
      opacity: 1;
      transform: translateY(0);
    }
  }

  .icon-btn {
    display: flex;
    background-color: transparent;
    border: 0;
    padding: 0;
    line-height: 1;
  }

  [data-icon] {
    color: currentColor;
  }

  @keyframes slide-in {
    0% {
      transform: translateX(100%);
    }
    100% {
      transform: translateX(0);
    }
  }

  @keyframes slide-out {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(100%);
    }
  }

  @keyframes fade-in {
    0% {
      backdrop-filter: blur(0);
      background-color: transparent;
    }
    100% {
      backdrop-filter: blur(5px);
      background-color: rgb(0 0 0 / 0.25);
    }
  }

  @keyframes fade-out {
    0% {
      backdrop-filter: blur(5px);
      background-color: rgb(0 0 0 / 0.25);
    }
    100% {
      backdrop-filter: blur(0);
      background-color: transparent;
    }
  }
</style>

<!-- JS -->

<script>
  document.addEventListener('astro:page-load', () => {
    const openBtn =
      document.querySelector<HTMLButtonElement>('.menu-open-btn')!;
    const closeBtn =
      document.querySelector<HTMLButtonElement>('.menu-close-btn')!;
    const dialogEl = document.querySelector<HTMLDialogElement>('.menu-dialog')!;

    function openMenu() {
      dialogEl.showModal();
    }

    function closeMenu() {
      dialogEl.dataset.closing = '';

      dialogEl.addEventListener(
        'animationend',
        () => {
          delete dialogEl.dataset.closing;
          dialogEl.close();
        },
        { once: true },
      );
    }

    // Close modal if the user click outside of the content wrapper
    function handleBackdropClose(e: MouseEvent) {
      if (e.target !== dialogEl) return;

      closeMenu();
    }

    openBtn.addEventListener('click', openMenu);
    closeBtn.addEventListener('click', closeMenu);
    dialogEl.addEventListener('click', handleBackdropClose);
  });
</script>
