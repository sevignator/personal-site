---
// import IconHamburger from '@components/IconHamburger.astro';
// import IconX from '@components/IconX.astro';
import { Icon } from 'astro-icon/components';
---

<style>
  .menu-dialog {
    width: 100%;
    max-width: 340px;
    height: 100%;
    max-height: 100%;
    margin-inline: auto 0;
    margin-block: 0;
    padding: 0;
    border: 0;
    animation: slide-in 300ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;

    &[data-closing] {
      animation: slide-out 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
    }
  }

  .menu-dialog::backdrop {
    animation: fade-in 200ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
  }

  .menu-dialog[data-closing]::backdrop {
    animation: fade-out 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
  }

  @keyframes slide-in {
    0% {
      transform: translateX(100%);
    }
    100% {
      transform: translateX(0);
    }
  }

  @keyframes slide-out {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(100%);
    }
  }

  @keyframes fade-in {
    0% {
      backdrop-filter: blur(0);
      background-color: transparent;
    }
    100% {
      backdrop-filter: blur(5px);
      background-color: rgb(0 0 0 / 0.25);
    }
  }

  @keyframes fade-out {
    0% {
      backdrop-filter: blur(5px);
      background-color: rgb(0 0 0 / 0.25);
    }
    100% {
      backdrop-filter: blur(0);
      background-color: transparent;
    }
  }

  .menu-dialog-content {
    display: flex;
    align-items: flex-start;
    gap: 15px;
    width: 100%;
    height: 100%;
    padding: 30px;
    background-color: black;
  }

  .menu-close-btn {
    order: 1;
  }

  .nav-links {
    display: flex;
    flex-direction: column;
    gap: 20px;
    width: 100%;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .nav-link {
    display: inline-block;
    font-size: 1.2rem;
    font-weight: 700;
    text-decoration: none;
    text-transform: uppercase;
    color: white;
    border-bottom: solid 2px transparent;
    transition: border-color 200ms;

    &:hover,
    &:focus {
      border-color: currentColor;
    }
  }

  .icon-btn {
    display: flex;
    background-color: transparent;
    border: 0;
    padding: 0;
    line-height: 1;
    cursor: pointer;
  }

  [data-icon='lucide:x'] {
    color: white;
  }
</style>

<button class='icon-btn menu-open-btn'>
  <Icon name='lucide:menu' size={30} />
</button>

<dialog class='menu-dialog'>
  <div class='menu-dialog-content'>
    <button class='icon-btn menu-close-btn'>
      <Icon name='lucide:x' size={30} />
    </button>
    <menu class='nav-links'>
      <li><a class='nav-link' href='/blog'>Blog</a></li>
      <li><a class='nav-link' href='/about'>About</a></li>
    </menu>
  </div>
</dialog>

<script>
  const openBtn = document.querySelector<HTMLButtonElement>('.menu-open-btn')!;
  const closeBtn =
    document.querySelector<HTMLButtonElement>('.menu-close-btn')!;
  const dialogEl = document.querySelector<HTMLDialogElement>('.menu-dialog')!;

  function openMenu() {
    dialogEl.showModal();
  }

  function closeMenu() {
    dialogEl.dataset.closing = '';

    dialogEl.addEventListener(
      'animationend',
      () => {
        delete dialogEl.dataset.closing;
        dialogEl.close();
      },
      { once: true }
    );
  }

  // Close modal if the user click outside of the content wrapper
  function handleBackdropClose(e: MouseEvent) {
    if (e.target !== dialogEl) return;

    closeMenu();
  }

  openBtn.addEventListener('click', openMenu);
  closeBtn.addEventListener('click', closeMenu);
  dialogEl.addEventListener('click', handleBackdropClose);
</script>
