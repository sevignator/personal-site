---
type Props = {
  colorPrimary?: string;
  width?: string | number;
};

const { colorPrimary = '', width = '40' } = Astro.props;
---

<svg
  width={width}
  height='100%'
  viewBox='0 0 780 340'
  version='1.1'
  xmlns='http://www.w3.org/2000/svg'
  xmlns:xlink='http://www.w3.org/1999/xlink'
  xml:space='preserve'
  style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;'
>
  <g transform='matrix(0.956982,0,0,1.33984,-134.141,-406.215)'>
    <g id='Black'>
      <path
        d='M140.176,377.814C140.176,336.833 186.519,303.522 243.783,303.181L244.671,303.181L244.671,482.309C244.671,523.29 198.329,556.601 141.065,556.942L140.176,556.942L140.176,377.814ZM370.066,377.814L370.066,556.942L369.177,556.942C311.913,556.601 265.57,523.29 265.57,482.309L265.57,303.181L266.459,303.181C323.723,303.522 370.066,336.833 370.066,377.814ZM390.965,377.814C390.965,336.833 437.307,303.522 494.571,303.181L495.46,303.181L495.46,482.309C495.46,523.29 449.117,556.601 391.853,556.942L390.965,556.942L390.965,377.814ZM620.854,377.814L620.854,556.942L619.966,556.942C562.702,556.601 516.359,523.29 516.359,482.309L516.359,303.181L517.248,303.181C574.512,303.522 620.854,336.833 620.854,377.814ZM746.245,482.307L955.228,482.307L955.228,482.941C954.75,523.842 908.112,556.942 850.736,556.942L641.753,556.942L641.753,556.308C642.231,515.407 688.869,482.307 746.245,482.307ZM746.245,467.38C688.869,467.38 642.231,434.279 641.753,393.379L641.753,392.744L850.736,392.744C908.112,392.744 954.75,425.844 955.228,466.745L955.228,467.38L746.245,467.38ZM746.245,303.181L955.228,303.181L955.228,303.816C954.75,344.717 908.112,377.817 850.736,377.817L641.753,377.817L641.753,377.182C642.231,336.281 688.869,303.181 746.245,303.181Z'
      ></path>
    </g>
  </g>
</svg>

<!-- CSS -->

<style define:vars={{ colorPrimary }}>
  svg {
    transition: fill 250ms;
  }

  :global(.dark) svg {
    fill: white;
  }
  svg:hover {
    fill: var(--colorPrimary);
  }
</style>
