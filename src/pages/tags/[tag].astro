---
import type { GetStaticPaths, InferGetStaticParamsType, InferGetStaticPropsType } from "astro";
import BaseLayout from '@layouts/BaseLayout.astro';
import BlogPostTeaser from '@components/BlogPostTeaser.astro';

export const getStaticPaths = (() => {
  const allPosts = await Astro.glob('@pages/blog/*.md');
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={`Tag: ${tag}`}>
  <p>Posts tagged with <strong>{tag}</strong>.</p>
  <ul>
    {
      posts.map((post) => (
        <BlogPostTeaser url={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
